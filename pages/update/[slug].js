import Head from 'next/head';
import dashify from 'dashify';
import { useState } from 'react';
import { useRouter } from 'next/router';
import styles from '../../styles/Home.module.css';

import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

function Update({ movie, data }) {

   const router = new useRouter();
   const [formData, setFormData] = useState([])
   const [movies, setMovies] = useState(data)

   async function updateMovie(e) {
      e.preventDefault();
      
      setMovies([movies, formData])
      const response = await fetch(`/api/edit/${movie.id}`, {
         method: 'PUT',
         headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
         },
         body: JSON.stringify(formData)
      })

      router.push('/show')
      return await response.json()
  }

   return (
      <div className={styles.container}>
         <Head>
            <title>{`Update film ${ movie.title }`}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>

         <main className={styles.main}>
            <form className={styles.movieform} onSubmit={updateMovie}>
               <input 
                  type="text" 
                  placeholder="Enter the title movie.." 
                  name="title" 
                  defaultValue={ movie.title }
                  onChange={e=> setFormData({ ...formData, title: e.target.value })} 
                  required 
               />
               <input 
                  type="number"
                  placeholder="Enter the year movie.." 
                  name="year" 
                  onChange={e=> setFormData({ ...formData, year: +e.target.value })} 
                  defaultValue={ movie.year } 
                  required 
               />
               <textarea 
                  name="description" 
                  cols="30" rows="10"
                  placeholder="Enter the description movie.." 
                  onChange={e=> setFormData({ ...formData, description: e.target.value })} 
                  defaultValue={ movie.description } 
                  required 
               />
               <input 
                  type="text" 
                  placeholder="Enter the slug.." 
                  name="slug" 
                  disabled
                  value={dashify(formData.title ?? "")}
                  required 
               />
                  <button type="submit">Add New Movie</button>
            </form> 
         </main>
      </div>
   )
}

export default Update;


export async function getServerSideProps(context) {

   const {slug} = context.query;

   const movie = await prisma.movie.findFirst({
      where: {
         slug: slug
      }
   })

   return {
      props: {
         movie
      }
   }

}